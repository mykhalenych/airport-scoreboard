{"version":3,"sources":["gateways/gateway.js","redux/airportboard.selectors.js","components/FlightBody.js","components/Main.js","redux/airportboard.action.js","components/Header.js","App.js","redux/airportboard.reducers.js","store.js","index.js"],"names":["baseUrl","date","moment","Date","format","airoportBoardListSelector","state","scoreBoardList","body","getTime","split","FlightBody","renderList","searchedFlight","length","className","map","item","key","Math","random","term","actual","status","src","airline","en","logoSmallName","alt","codeShareData","name","codeShare","city","mapDispatch","getScoreBoardList","dispatch","fetch","then","response","ok","json","boardList","scoreboardList","type","payload","connect","useEffect","location","useLocation","useState","setActive","arrivalClass","departureClass","pathname","includes","direction","useParams","arrival","filter","undefined","time","timeArrShedule","sort","a","b","departure","search","qs","parse","ignoreQueryPrefix","flightItem","to","Header","searchValue","setValue","history","useHistory","flight","push","value","onChange","e","target","placeholder","App","path","initialState","flightNumber","boardReducer","action","reducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a50796a.chunk.js","sourcesContent":["import moment from \"moment\";\n\nconst baseUrl = \"https://api.iev.aero/api/flights\";\nconst date = moment(new Date()).format(\"DD-MM-YYYY\");\n\nexport const fetchFligth = () => {\n  return fetch(`${baseUrl}/${date}`)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .then((boardList) => {\n      return boardList;\n    });\n};\n\n\nexport const searchFlight = () => {\n  return fetch(`${baseUrl}/${date}/`)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .then((boardList) => {\n      return boardList;\n    });\n};","export const airoportBoardListSelector = (state) =>\n  state.scoreBoardList.scoreBoardList.body;\n\nexport const flightListSelector = (state) => state.flightNumber.flightNumber;\n\nexport const getTime = (date) => {\n  return `${date.split(\"T\")[0].split(\":\")} ${\n    date.split(\"T\")[1].split(\":\")[0]\n  }:${date.split(\"T\")[1].split(\":\")[1]}`;\n};\n","import React from \"react\";\nimport { getTime } from \"../redux/airportboard.selectors\";\n\nconst FlightBody = ({ renderList, searchedFlight }) => {\n  if (searchedFlight !== null) {\n    if (searchedFlight.length === 0) {\n      return <div className=\"error__tr\">Flight not found</div>;\n    } else {\n      return searchedFlight.map((item) => (\n        <tbody key={Math.random()} className=\"scoreboardList-body\">\n          <tr className=\"scoreboardList-body__tr\">\n            <td>{item.term}</td>\n            <td>{getTime(item.actual)}</td>\n            <td>{item[\"airportToID.city_en\"]}</td>\n            <td>{item.status === \"CX\" ? \"Canceled\" : item.status}</td>\n            <td className=\"scoreboardList-body__tr-item\">\n              {\n                <img\n                  className=\"image__logo\"\n                  src={item.airline.en.logoSmallName}\n                  alt=\"logo\"\n                />\n              }\n              {item.codeShareData[0].airline.en.name}\n            </td>\n            <td>{item.codeShareData[0].codeShare}</td>\n          </tr>\n        </tbody>\n      ));\n    }\n  }\n  return renderList.map((item) => (\n    <tbody key={Math.random()} className=\"scoreboardList-body\">\n      <tr className=\"scoreboardList-body__tr\">\n        <td>{item.term}</td>\n        <td>{getTime(item.actual)}</td>\n        <td>{item.city}</td>\n        <td>{item.status === \"CX\" ? \"Canceled\" : item.status}</td>\n        <td className=\"scoreboardList-body__tr-item\">\n          {\n            <img\n              className=\"image__logo\"\n              src={item.airline.en.logoSmallName}\n              alt=\"logo\"\n            />\n          }\n          {item.codeShareData[0].airline.en.name}\n        </td>{\" \"}\n        <td>{item.codeShareData[0].codeShare}</td>\n      </tr>\n    </tbody>\n  ));\n};\n\nexport default FlightBody;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation, Link, Switch, useParams } from \"react-router-dom\";\nimport \"./main.scss\";\nimport FlightLandSharpIcon from \"@material-ui/icons/FlightLandSharp\";\nimport FlightTakeoffSharpIcon from \"@material-ui/icons/FlightTakeoffSharp\";\nimport qs from \"qs\";\nimport * as actions from \"../redux/airportboard.action\";\nimport { connect } from \"react-redux\";\nimport FlightBody from \"./FlightBody\";\nimport { airoportBoardListSelector } from \"../redux/airportboard.selectors\";\n\nconst Main = ({ scoreboardList, getScoreBoardList }) => {\n  useEffect(() => {\n    getScoreBoardList();\n  }, []);\n\n  const location = useLocation();\n  const [status, setActive] = useState(\"departure\");\n\n  const arrivalClass = status === \"arrival\" ? \"_active\" : \"_inactive\";\n  const departureClass = status === \"departure\" ? \"_active\" : \"_inactive\";\n  useEffect(() => {\n    if (location.pathname.includes(\"arrival\")) {\n      setActive(\"arrival\");\n    } else if (location.pathname.includes(\"departure\")) {\n      setActive(\"departure\");\n    }\n  }, [location]);\n\n  let { direction } = useParams();\n  let renderList = [];\n\n  if (scoreboardList) {\n    if (direction === \"arrival\") {\n      renderList = scoreboardList.arrival\n        .filter((item) => item.airline !== undefined)\n        .map((item) => {\n          return {\n            ...item,\n            city: item[\"airportFromID.city_en\"],\n            time: item.timeArrShedule,\n          };\n        })\n        .sort((a, b) => a.time - b.time);\n    } else {\n      renderList = scoreboardList.departure\n        .filter((item) => item.airline !== undefined)\n        .map((item) => {\n          return {\n            ...item,\n            city: item[\"airportToID.city_en\"],\n            time: item.timeArrShedule,\n          };\n        })\n        .sort((a, b) => a.time - b.time);\n    }\n  }\n\n  const search = qs.parse(useLocation().search, { ignoreQueryPrefix: true })\n    .search;\n  let searchedFlight = !search\n    ? null\n    : scoreboardList.departure.filter((flightItem) => {\n        return flightItem.codeShareData[0].codeShare === search;\n      });\n\n  return (\n    <>\n      <div className=\"conteiner\">\n        <button className={`btn conteiner__btn-departure${departureClass}`}>\n          <FlightTakeoffSharpIcon />\n          <Link to=\"/departure\">departure</Link>\n        </button>\n        <button className={`btn conteiner__btn-arrival${arrivalClass}`}>\n          <FlightLandSharpIcon />\n          <Link to=\"/arrival\">arrival</Link>\n        </button>\n      </div>\n      <table className=\"scoreboardList\">\n        <thead className=\"scoreboardList-header\">\n          <tr className=\"scoreboardList-header__tr\">\n            <th>Terminal</th>\n            <th>Schedule</th>\n            <th>Destination\t</th>\n            <th>Status</th>\n            <th>Airline</th>\n            <th>Flight</th>\n          </tr>\n        </thead>\n        <Switch>\n          <FlightBody renderList={renderList} searchedFlight={searchedFlight} />\n        </Switch>\n      </table>\n    </>\n  );\n};\n\nconst mapDispatch = {\n  getScoreBoardList: actions.getBoardList,\n};\nconst mapState = (state) => {\n  return {\n    scoreboardList: airoportBoardListSelector(state),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Main);\n","import { fetchFligth } from \"../gateways/gateway\";\n\nexport const SCOREBOARD_LIST_RECIVED = \"BOARD_LIST_RECIVED\";\nexport const GET_FLIGHT = \"GET_FLIGHT\"\n\n\nexport const boardListRecived = (scoreBoardList) => {\n  const action = {\n    type: SCOREBOARD_LIST_RECIVED,\n    payload: {\n      scoreBoardList,\n    },\n  };\n  return action;\n};\n\n\nexport const getBoardList = () => {\n  const thunkAction = function (dispatch) {\n    fetchFligth().then((scoreboardList) =>{\n    return dispatch(boardListRecived(scoreboardList))});\n  };\n  return thunkAction;\n};\n\n\n\n\n","import React, { useState, useEffect } from \"react\";\nimport SearchSharpIcon from \"@material-ui/icons/SearchSharp\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\n// import Main from './Main'\n\nconst Header = () => {\n  const [searchValue, setValue] = useState(\"\");\n  let history = useHistory();\n  let location = useLocation();\n  const { flight, direction } = useParams();\n  useEffect(() => {\n    if (searchValue) {\n      history.push(`${location.pathname}/${searchValue}`);\n    }\n    if (flight) setValue(flight);\n  }, [direction]);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <section className=\"scoreboard\">\n      <h2 className=\"scoreboard__title\">SEARCH FLIGHT</h2>\n      <form className=\"scoreboard__form\">\n        <div className=\"scoreboard__form\">\n          <input\n            className=\"scoreboard__form-search\"\n            value={searchValue}\n            onChange={onChange}\n            name=\"input\"\n            placeholder=\"Write flight number\"\n          />\n          <SearchSharpIcon className=\"scoreboard__form-icon\" />\n        </div>\n        <button className=\"scoreboard__form-submit\" type=\"submit\">\n          <Link to={`/departure?search=${searchValue}`}>Search</Link>\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport { Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"wrap\">\n    <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route path=\"/:direction?/:flight?\">\n            <Main  />\n          </Route>\n        </Switch>\n    </BrowserRouter>\n      </div>\n  );\n};\n\nexport default App\n","import { SCOREBOARD_LIST_RECIVED } from \"./airportboard.action\";\n\nconst initialState = {\n  scoreBoardList: [],\n  flightNumber: [],\n};\n\nconst boardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SCOREBOARD_LIST_RECIVED:\n      return {\n        ...state,\n        scoreBoardList: action.payload.scoreBoardList,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport boardReducer from \"./redux/airportboard.reducers\";\n\nconst reducer = combineReducers({\n  scoreBoardList: boardReducer,\n  flightNumber: boardReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}